"0","# reading in RDS file"
"0","gamma_values <- readRDS(""gamma_values.rds"")"
"0",""
"0","# creating negative log likelihood function:"
"0","n <- length(gamma_values)"
"0",""
"0","l <- function(params) {"
"0","  -(n * (params[1] * log(params[2] - log(gamma(params[1])))) + "
"0","      (params[1] - 1) * sum(log(gamma_values)) - params[2] * sum(gamma_values))"
"0","}"
"0",""
"0","grad_desc_h <- function(g, h, alpha, w0, K) {"
"0","  # create initial list object"
"0","  result <- list(index = c(), val = c())"
"0","  "
"0","  # set initial point:"
"0","  curr_point <- w0"
"0","  # create initial empty coordinate matrix (ncol = n+1)"
"0","  mat <- matrix(nrow = K, ncol = length(w0) + 1)"
"0","  "
"0","  # create gradient approximation function:"
"0","  grad_g <- function(x) {"
"0","    result_vec <- c()"
"0","    for (i in 1:length(x)) {"
"0","      current_result <- (g(x + h) - g(x - h)) / (2*h)"
"0","      result_vec <- append(result_vec, current_result)"
"0","    }"
"0","    result_vec"
"0","  }"
"0","  "
"0","  # iterate for K iterations..."
"0","  for (i in 1:K) {"
"0","    # calculate gradient at current step"
"0","    grad_curr <- grad_g(curr_point)"
"0","    # update... "
"0","    mat[i, 1:length(w0)] <- curr_point - alpha * grad_curr"
"0","    curr_point <- mat[i, 1:length(w0)]"
"0","  }"
"0","  "
"0","  # fill out the last column of the matrix:"
"0","  mat[, length(w0) + 1] <- apply(mat[, 1:length(w0)], 1, function(row) g(row))"
"0","  "
"0","  inputs <- mat[, 1:length(w0)]"
"0","  outputs <- mat[, length(w0) + 1]"
"0","  min_val <- min(outputs)"
"0","  # Check if there are duplicate minimum values"
"0","  min_indices <- which(outputs == min_val)"
"0","  num_min_indices <- length(min_indices)"
"0","  if (num_min_indices > 1) {"
"0","    # If there are multiple minimum values, choose the first one"
"0","    min_index <- inputs[min_indices[1], ]"
"0","  } else {"
"0","    # If there is only one unique minimum value, directly extract its index"
"0","    min_index <- inputs[min_indices, ]"
"0","  }"
"0","  "
"0","  result$index <- min_index"
"0","  result$val <- min_val"
"0","  "
"0","  # return result:"
"0","  result"
"0","}"
"0",""
"0","output_7 <- grad_desc_h(l, 0.0001, 0.005, c(1.5, 1), 200)"
"0","output_7$index"
"1","[1]"
"1"," 1.758878931"
"1"," 1.258878931"
"1","
"
