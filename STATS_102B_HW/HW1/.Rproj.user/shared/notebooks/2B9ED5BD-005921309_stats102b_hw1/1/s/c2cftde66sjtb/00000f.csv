"0","# attempts to minimize any one variable function"
"0","zom <- function(g, alpha, w0, K) {"
"0","  # create empty result list:"
"0","  result <- list(index = c(), val = c())"
"0","  "
"0","  # define variables"
"0","  curr_iter <- 0"
"0","  curr_point <- w0"
"0","  while (curr_iter < K) {"
"0","    # current point's evaluation:"
"0","    curr_eval <- g(curr_point)"
"0","    # points to evaluate the function g at:"
"0","    sample_points <- c(curr_point + alpha, curr_point - alpha)"
"0","    # points evaluated"
"0","    evaluated_points <- sapply(sample_points, g)"
"0","    # find the difference between the old and new evaluation:"
"0","    diff_1 <- evaluated_points[1] - curr_eval"
"0","    diff_2 <- evaluated_points[2] - curr_eval"
"0","    "
"0","    # pick the best new point:"
"0","    if (diff_1 <= diff_2) {"
"0","      curr_point <- sample_points[1]"
"0","    } else {"
"0","      curr_point <- sample_points[2]"
"0","    }"
"0","    "
"0","    # increment curr_iter:"
"0","    curr_iter <- curr_iter + 1"
"0","  }"
"0","  "
"0","  # set the ""index"" to be the current point:"
"0","  result$index <- curr_point"
"0","  # set the ""val"" to be the function evaluated at the current point:"
"0","  result$val <- g(curr_point)"
"0","  # output the result"
"0","  result"
"0","}"
