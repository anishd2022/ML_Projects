"0","# create all the models:"
"0","lm_formula <- y ~ x"
"0","quad_formula <- y ~ x + I(x^2)"
"0","cubic_formula <- y ~ x + I(x^2) + I(x^3)"
"0","fteen_formula <- y ~ x + I(x^2) + I(x^3) + I(x^4) + I(x^5) + I(x^6) + I(x^7) +"
"0","                    I(x^8) + I(x^9) + I(x^10) + I(x^11) + I(x^12) + I(x^13) + I(x^14)"
"0","exp_formula <- log(y) ~ x"
"0",""
"0","simple_lm <- lm(data = vball_data, formula = lm_formula)"
"0","quad_model <- lm(formula = quad_formula, data = vball_data)"
"0","cubic_model <- lm(formula = cubic_formula, data = vball_data)"
"0","fteen_model <- lm(formula = fteen_formula, data = vball_data)"
"0","exp_model <- lm(data = vball_data, formula = exp_formula)"
"0",""
"0","# create scatter plot of models:"
"0","# Create predicted values for each model"
"0","vball_data$pred_simple <- predict(simple_lm)"
"0","vball_data$pred_quad <- predict(quad_model)"
"0","vball_data$pred_cubic <- predict(cubic_model)"
"0","vball_data$pred_fteen <- predict(fteen_model)"
"0","vball_data$pred_exp <- exp(predict(exp_model))"
"0",""
"0","# Create ggplot"
"0","ggplot(vball_data, aes(x = x, y = y)) +"
"0","  geom_point() +  # Scatterplot of true data values"
"0","  geom_line(aes(y = pred_simple, color = ""Simple Linear"")) +  "
"0","  geom_line(aes(y = pred_quad, color = ""Quadratic"")) +  "
"0","  geom_line(aes(y = pred_cubic, color = ""Cubic"")) +  "
"0","  geom_line(aes(y = pred_fteen, color = ""Degree 14 Polynomial"")) +  "
"0","  geom_line(aes(y = pred_exp, color = ""Exponential""), linetype = ""dashed"") +  "
"0","  labs(color = ""Models"") +  # Legend label"
"0","  scale_color_manual(values = c(""Simple Linear"" = ""blue"", "
"0","                                 ""Quadratic"" = ""red"", "
"0","                                 ""Cubic"" = ""green"","
"0","                                 ""Degree 14 Polynomial"" = ""orange"","
"0","                                 ""Exponential"" = ""purple"")) +  # Custom colors"
"0","  guides(color = guide_legend(title = ""Models"")) +  # Legend title"
"0","  xlab(""spike"") + ylab(""block"")"
